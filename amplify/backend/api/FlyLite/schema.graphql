type Location {
  address: Address
  coordinates: GPSLocation
}

type Address {
  number: String
  street: String
  neighborhood: String
  municipality: String
  region: String
  country: String
  postalCode: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  userName: String!
}

type Reply @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorID: String!
  title: String!
  body: String!
  postID: ID! @index(name: "byPost")
  reports: [Report] @manyToMany(relationName: "ReplyReport")
}

enum Pests {
  UNKNOWN
  GRAPE_BERRY_MOTH
  SPOTTED_LANTERN_FLY
}

type Report @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorID: String!
  pestActual: Pests!
  pestSubmitted: Pests
  pestIdentified: Pests
  image: String
  posts: [Post] @manyToMany(relationName: "PostReport")
  replys: [Reply] @manyToMany(relationName: "ReplyReport")
  longitude: Float
  latitude: Float
  address_number: String
  address_street: String
  address_neighborhood: String
  address_municipality: String
  address_region: String
  address_country: String
  address_postalCode: String
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  authorID: String!
  title: String!
  body: String!
  replies: [Reply] @hasMany(indexName: "byPost", fields: ["id"])
  reports: [Report] @manyToMany(relationName: "PostReport")
}

type GPSLocation {
  longitude: Float!
  latitude: Float!
}
 